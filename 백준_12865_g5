#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <cassert>
#include <deque>
#include <queue>


using namespace std;

int main()
{
    int N; // 물품수
    int K; // 버틸수 있는 무게

    cin >> N >> K;

    // 1-based
    vector <int> W(N + 1); // 무게 저장
    vector <int> V(N + 1); // 가치 저장

    for (int i = 1; i <= N; i++)
    {
        cin >> W[i] >> V[i];
    }

    vector<vector<int>> DP(N + 1, vector<int>(K + 1, 0)); // 0으로 모든 행 초기화

    for (int i = 1; i <= N; i++)
    {
        for (int remain_weight = 0; remain_weight <= K; remain_weight++)
        {
            if (W[i] > remain_weight) // 배낭에 남은 무게가 없어서 물품 선택을 안할경우
            {
                DP[i][remain_weight] = DP[i - 1][remain_weight]; // i번째 물품을 선택하지 않았을때 최대가치를 저장, i-1번째 물품까지만 고려
            }
            else
            {
                // 배낭에 남은 무게가 있어서 담을 수 있는경우, 물품 i를 담지않는 경우와 담는 경우의 최대값 비교
                DP[i][remain_weight] = max(DP[i - 1][remain_weight], DP[i - 1][remain_weight - W[i]] + V[i]);
            }
        }
    }

    cout << DP[N][K] << endl;
    return 0;
}
