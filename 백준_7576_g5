#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <cassert>
#include <deque>
#include <queue>

using namespace std;

int box[1001][1001];
bool visit[1001][1001];

int dx[4] = { 1, 0, -1, 0 };
int dy[4] = { 0, 1, 0, -1 };
int M, N;

int date = 0;

void BFS()
{
    int i, j;

    queue<pair<int, int>> q;
    for (i = 0; i < N; i++) // 토마토가 있는곳 좌표 큐에 저장
    {
        for (j = 0; j < M; j++)
        {
            if (box[i][j] == 1)
            {
                q.push(make_pair(j, i));
            }
            if (box[i][j] == -1)
            {
                visit[i][j] = true; // 토마토가 없는곳은 미리 안가는 곳으로 저장
            }
        }
    }

    while (!q.empty())
    {
        int x = q.front().first;
        int y = q.front().second;
        q.pop();

        for (i = 0; i < 4; i++)
        {
            int x_next = x + dx[i];
            int y_next = y + dy[i];

            if ((x_next >= 0 && x_next < M) && (y_next >= 0 && y_next < N) && visit[y_next][x_next] == false)
            {
                if (box[y_next][x_next] == 0 && visit[y_next][x_next] == false) // 익은 토마토 옆이 아직 익지 않은 토마토고, 아직 가지 않은경우
                {
                    box[y_next][x_next] = box[y][x] + 1; // 날짜 추가, 며칠째에 익었는지 표시
                    visit[y_next][x_next] = true; // 해당위치 들렀다고 표시함
                    q.push(make_pair(x_next, y_next));
                }
            }
        }
    }

    for (i = 0; i < N; i++) // 다 돌렸는데도 0이 있으면 못익는곳이 있다는 소리임. 그럼 -1로 출력함
    {
        for (j = 0; j < M; j++)
        {
            if (box[i][j] == 0)
            {
                date = -1;
                return;
            }

            if (date < box[i][j]) // 박스에 써져있는 토마토 끝까지 다 익은 날짜 입력
            {
                date = box[i][j];
            }
        }
    }

    date--;
}

int main()
{
    cin >> M >> N;

    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < M; j++)
        {
            int tomato;
            cin >> tomato;
            box[i][j] = tomato;
        }
    }

    BFS();

    cout << date << endl;


    return 0;
}
